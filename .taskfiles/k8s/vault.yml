---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:
  setup:
    desc: Setup Vault authentication
    cmds:
      - task: setup-resources
      - task: setup-k8s-auth
      - task: setup-role
      - task: setup-sa-token
    vars:
      K8S_HOST:
        sh: kubectl config view -o jsonpath='{.clusters[0].cluster.server}'
    preconditions:
      - vault status &>/dev/null

  setup-resources:
    desc: Create Kubernetes resources
    cmd: kubectl apply -f {{.TASKFILE_DIR}}/resources/external-secrets-token.yaml
    preconditions:
      - test -f {{.TASKFILE_DIR}}/resources/external-secrets-token.yaml

  setup-k8s-auth:
    desc: Enable kubernetes auth
    cmds:
      - kubectl config view --raw -o jsonpath='{.clusters[0].cluster.certificate-authority-data}' | base64 -d > {{.TEMP_DIR}}/k8s-ca.crt
      - vault auth list | grep -q "homelab/" || vault auth enable -path=homelab kubernetes
      - |
        vault write auth/homelab/config \
          kubernetes_host="$(kubectl config view -o jsonpath='{.clusters[0].cluster.server}')" \
          kubernetes_ca_cert=@{{.TEMP_DIR}}/k8s-ca.crt
  setup-role:
    desc: Create authentication role
    cmd: |
      vault write auth/homelab/role/external-secrets \
        bound_service_account_names="external-secrets" \
        bound_service_account_namespaces="*" \
        policies="ops" \
        ttl=24h || echo "Role may already exist, continuing..."

  setup-sa-token:
    desc: Configure serviceaccount token
    cmd: |
      until JWT_TOKEN=$(kubectl get secret external-secrets-token -n external-secrets -o jsonpath='{.data.token}' | base64 -d); do sleep 5; done
      vault write auth/homelab/login role=external-secrets jwt="$JWT_TOKEN"
