# vim: ft=sh
layout pipenv 3.12.0

for env in .secret/env.d/*; do
  dotenv_if_exists "$env"
done

strict_env has git-crypt

if [ ! -f ".git/git-crypt/keys/default" ]; then
  echo "ERROR: no git-crypt key found. Run 'git-crypt unlock KEYFILE' to unlock" >&2
  exit 1
fi

## Ansible
mkdir -p "$(expand_path ./.cache/ansible/collections)"
mkdir -p "$(expand_path ./.cache/ansible/roles)"
mkdir -p "$(expand_path ./.cache/ansible/tmp)"
export ANSIBLE_VAULT_PASSWORD_FILE="$(expand_path ./.secret/ansible_vault_key)"
export ANSIBLE_CONFIG="$(expand_path ./ansible/ansible.cfg)"
export ANSIBLE_PLAYBOOK_DIR="$(expand_path ./ansible/playbooks)"
export ANSIBLE_COLLECTIONS_PATH="$(expand_path ./.cache/ansible/collections)"
export ANSIBLE_ROLES_PATH="$(expand_path ./.cache/ansible/roles):roles"
export ANSIBLE_LOCAL_TEMP="$(expand_path ./.cache/ansible/tmp)"
export ANSIBLE_LOG_PATH="$(expand_path ./.cache/ansible.log)"
export ANSIBLE_GALAXY_TOKEN_PATH="$(expand_path ./.cache/galaxy_token)"

## Terraform
mkdir -p "$(expand_path ./.cache/terraform/plugins)"
mkdir -p "$(expand_path ./.cache/terraform)"
export TF_PLUGIN_CACHE_DIR=$(expand_path ./.cache/terraform/plugins)

## Talos
TALOSCONFIG="$(expand_path ./k8s/talos/clusterconfig/talosconfig)"
export TALOSCONFIG

## Kubernetes
KUBECONFIG="$(expand_path ./.secret/kubeconfig)"
export KUBECONFIG

## Misc
export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES # disable safety checks in macOS for python to function
export K9S_FEATURE_GATE_NODE_SHELL=true

## ZSH history file
export HISTFILE="$(expand_path ./.cache/zsh_history)"
export DIRENV_HOOK=1
