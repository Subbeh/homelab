---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  driftDetection:
    mode: enabled
    ignore:
      - paths: [/spec/replicas]
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: kube-system
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/plex
              tag: 1.42.1.10060@sha256:04563be281364ba2462285aacb2ca13d7ef7e1d0b19e1203f4c19b4a56840c5c
            env:
              PLEX_ADVERTISE_URL: https://plex.${DOMAIN}:443
              PLEX_NO_AUTH_NETWORKS: 10.11.0.0/16
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: &port 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 1
                memory: 2Gi
              limits:
                gpu.intel.com/i915: 1
                memory: 8Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"
    service:
      app:
        primary: true
        forceRename: *app
        ports:
          http:
            primary: true
            port: *port
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.${DOMAIN}"
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs: [{}]
            filters:
              - type: RequestHeaderModifier
                requestHeaderModifier:
                  remove: ["Range"]
            matches:
              - path:
                  type: PathPrefix
                  value: /library/streams
          - backendRefs: [{}]
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/icon: "{{ .Release.Name }}.svg"
          gethomepage.dev/name: "{{ .Release.Name | title }}"
          gethomepage.dev/widget.type: "{{ .Release.Name }}"
          gethomepage.dev/widget.url: "https://{{ .Release.Name }}.${DOMAIN}"
          gethomepage.dev/widget.key: "{{`{{HOMEPAGE_VAR_PLEX_TOKEN}}`}}"
    persistence:
      config:
        enabled: true
        existingClaim: plex
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server
      config-cache:
        existingClaim: plex-cache
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs
            subPath: logs
          - path: /transcode
            subPath: transcode
          - path: /tmp
            subPath: tmp
      media:
        type: nfs
        server: "${NAS_HOST}"
        path: /data/hdd1/media
        globalMounts:
          - path: /media
