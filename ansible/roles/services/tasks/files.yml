---
- name: Copy data to remote host
  become: true
  delegate_to: "{{ file_item.host }}"
  when: file_item.src is defined or file_item.content is defined
  block:
    - name: Check source file
      when: file_item.src is defined
      block:
        - name: Set local file facts for {{ item.src }}
          ansible.builtin.set_fact:
            src_file: "{{ ansible_root + '/services/data/' + file_item.src }}"
            src_ext: "{{ file_item.src | splitext }}"
          when: file_item.src is defined

        - name: Get local file stats for {{ src_file }}
          ansible.builtin.stat:
            path: "{{ src_file }}"
          become: false
          register: file_stat
          delegate_to: localhost
          no_log: true

        - name: Fail if local file does not exist
          ansible.builtin.fail:
            msg: "File {{ src_file }} does not exist"
          when: file_stat.stat.exists is false

    - name: Ensure destination dir exists
      file:
        path: "{{ file_item.dest | dirname }}"
        owner: "{{ file_item.dir_owner | default(omit) }}"
        group: "{{ file_item.dir_group | default(omit) }}"
        mode: "{{ file_item.dir_mode | default('0700') }}"
        state: directory

    - name: Copy file over
      ansible.builtin.copy:
        src: "{{ src_file | default(omit) }}"
        content: "{{ file_item.content | default(omit) }}"
        dest: "{{ file_item.dest }}"
        owner: "{{ file_item.owner | default(omit) }}"
        group: "{{ file_item.group | default(omit) }}"
        mode: "{{ file_item.mode | default(omit) }}"
        force: "{{ file_item.force | default(true) }}"
      when: src_ext[1] != '.j2'

    - name: Copy template over
      ansible.builtin.template:
        src: "{{ src_file }}"
        dest: "{{ file_item.dest }}"
        owner: "{{ file_item.owner | default(omit) }}"
        group: "{{ file_item.group | default(omit) }}"
        mode: "{{ file_item.mode | default(omit) }}"
        force: "{{ file_item.force | default(true) }}"
      when: src_ext[1] == '.j2'

- name: Create empty file or directory
  become: true
  delegate_to: "{{ file_item.host }}"
  ansible.builtin.file:
    path: "{{ file_item.dest }}"
    state: "{{ file_item.state | default('directory') }}"
    mode: "{{ file_item.mode | default(omit) }}"
    owner: "{{ file_item.owner | default(omit) }}"
    group: "{{ file_item.group | default(omit) }}"
    recurse: "{{ true if (file_item.state is undefined or file_item.state == 'directory') else omit }}"
  when:
    - file_item.src is not defined
    - file_item.content is not defined
